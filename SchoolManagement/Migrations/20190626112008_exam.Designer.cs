// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagement.Data;

namespace SchoolManagement.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20190626112008_exam")]
    partial class exam
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolManagement.Data.Attendanceinfo", b =>
                {
                    b.Property<string>("AttendAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AttendAdmin");

                    b.Property<float>("AttendancePercentage")
                        .HasColumnName("AttendencePercentage");

                    b.Property<int>("NoOfAbsentdays")
                        .HasColumnName("NoOfAbsentdays");

                    b.Property<int>("NoOfPresentdays")
                        .HasColumnName("NoOfPresentdays");

                    b.Property<int>("NoOfWorkingdays")
                        .HasColumnName("NoOfWorkingdays");

                    b.HasKey("AttendAdmin");

                    b.ToTable("Attendanceinfos");
                });

            modelBuilder.Entity("SchoolManagement.Data.Examsmgmt", b =>
                {
                    b.Property<string>("ExaminationIncharge")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("marksinfo");

                    b.Property<string>("subjects");

                    b.HasKey("ExaminationIncharge");

                    b.ToTable("examsmanagement");
                });

            modelBuilder.Entity("SchoolManagement.Data.Library", b =>
                {
                    b.Property<string>("Administratorname")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Adminname");

                    b.Property<string>("AvailableSubjectBooks")
                        .HasColumnName("Avlblesubjectbooks");

                    b.Property<string>("SubjetAuthorslist")
                        .HasColumnName("SubjectAuthorslist");

                    b.HasKey("Administratorname");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("SchoolManagement.Data.Parentsinfo", b =>
                {
                    b.Property<string>("parentname")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("parentname");

                    b.Property<string>("EmailAddress")
                        .HasColumnName("EmailAddress");

                    b.Property<string>("MobileNumber")
                        .HasColumnName("MobileNumber");

                    b.HasKey("parentname");

                    b.ToTable("Parentsinfos");
                });

            modelBuilder.Entity("SchoolManagement.Data.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("Address");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("City");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("Country");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreationTime");

                    b.Property<double>("Lattitude")
                        .HasColumnName("Lattitude");

                    b.Property<double>("Longitude")
                        .HasColumnName("Longitude");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnName("MobileNumber");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("ModificationTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(18);

                    b.Property<int>("PinCode");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("State");

                    b.HasKey("Id");

                    b.ToTable("SchoolInfos");
                });

            modelBuilder.Entity("SchoolManagement.Data.Staffinfo", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacultyAddress")
                        .HasColumnName("FacultyAddress");

                    b.Property<string>("FacultyName")
                        .HasColumnName("FacultyName")
                        .HasMaxLength(18);

                    b.Property<string>("Gender")
                        .HasColumnName("Gender");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnName("MobileNumber");

                    b.Property<double>("Salary");

                    b.Property<string>("Subject")
                        .HasColumnName("Subject");

                    b.HasKey("FacultyId");

                    b.ToTable("StaffInfos");
                });

            modelBuilder.Entity("SchoolManagement.Data.Studentsinfo", b =>
                {
                    b.Property<long>("studentid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnName("DateofBirth")
                        .HasColumnType("DateTime2");

                    b.Property<byte[]>("Photo");

                    b.Property<string>("address")
                        .HasColumnName("address");

                    b.Property<string>("parentname")
                        .HasColumnName("parentname");

                    b.Property<int>("rank")
                        .HasColumnName("rank");

                    b.Property<int>("standard")
                        .HasColumnName("standard");

                    b.Property<string>("studentname")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(18);

                    b.HasKey("studentid");

                    b.ToTable("StudentsInfos");
                });

            modelBuilder.Entity("SchoolManagement.Data.Transportationinfo", b =>
                {
                    b.Property<double>("busno");

                    b.Property<string>("contactno")
                        .HasColumnName("contactno");

                    b.Property<string>("drivername")
                        .HasColumnName("drivername");

                    b.Property<string>("route")
                        .HasColumnName("route");

                    b.HasKey("busno");

                    b.ToTable("Transportationinfos");
                });

            modelBuilder.Entity("SchoolManagement.Data.subjectmanagement", b =>
                {
                    b.Property<string>("subjectname")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("subjectname");

                    b.Property<string>("referencebook")
                        .HasColumnName("referencebook");

                    b.Property<string>("subjectteacher")
                        .HasColumnName("subjectteacher");

                    b.HasKey("subjectname");

                    b.ToTable("subjectmanagements");
                });
#pragma warning restore 612, 618
        }
    }
}
